import { z } from "zod";

export const LeaseSchema = z.object({
  id: z.string().uuid().optional(), // generated by DB if not provided

  // Relationships
  unitId: z.string().uuid(),
  tenantId: z.string().uuid(),

  // Lease details
  startDate: z.string().refine((val) => !isNaN(Date.parse(val)), {
    message: "Invalid start date",
  }),
  endDate: z
    .string()
    .refine((val) => !isNaN(Date.parse(val)), { message: "Invalid end date" })
    .nullable()
    .optional(),
  monthlyRent: z.number().nonnegative(),
  currency: z.string().default("ZAR"),
  depositAmount: z.number().nonnegative().nullable().optional(),
  paymentFrequency: z.enum(["monthly", "weekly", "yearly"]).default("monthly"),

  // Status
  status: z.enum(["active", "terminated", "pending"]).default("active"),

  // Notes
  notes: z.string().nullable().optional(),

  // Metadata
  createdAt: z.string().datetime().optional(),
  updatedAt: z.string().datetime().nullable().optional(),
});

export type Lease = z.infer<typeof LeaseSchema>;